@model AS_TestProject.Entities.Employee

@{
    ViewBag.Title = "Edit";
}

<div class="col-lg-12 mt">
    <div class="row content-panel" style="padding-left: 20px; padding-right: 20px">
        <h2>Edit Employee: <span style="color: #29AAE3">@Model.FirstName @Model.LastName</span></h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EmployeeID)
                @Html.HiddenFor(model => model.AddByEmployeeID)
                <input name="AddDate" type="hidden" value="@Model.AddDate.ToString("M/d/yyyy")" />

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        First Name
                    </div>                 
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control capitalize", required = "true" } })
                        @*@Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Last Name
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control capitalize", required = "true" } })
                        @*@Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Address Line 1
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                        @*@Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Address Line 2
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control", type = "text"} })
                        @*@Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        City
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", required = "true" } })
                        @*@Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        State
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", required = "true", maxlength = "2" } })
                        @*@Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Zip Code
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control onlyNum", required = "true", maxlength = "5" } })
                        @*@Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Email
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @*@Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Home Phone
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.HomePhone, new { htmlAttributes = new { @class = "form-control onlyNum phone", maxlength = "14" } })
                        @*@Html.ValidationMessageFor(model => model.HomePhone, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Cell Phone
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.CellPhone, new { htmlAttributes = new { @class = "form-control onlyNum phone", maxlength = "14" } })
                        @*@Html.ValidationMessageFor(model => model.CellPhone, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Birth Date
                    </div>  
                    <div class="col-md-4">
                        <input class="form-control" name="BirthDate" value="@Model.BirthDate.ToString("M/d/yyyy")" required />
                        @*@Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Hire Date
                    </div>  
                    <div class="col-md-4">
                        <input class="form-control" name="HireDate" value="@Model.HireDate.ToString("M/d/yyyy")" required/>
                        @*@Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Termination Date
                    </div>  
                    <div class="col-md-4">
                        <input class="form-control" name="TerminationDate" value="@Model.TerminationDate.ToString("M/d/yyyy")" required/>
                        @*@Html.EditorFor(model => model.TerminationDate, new { htmlAttributes = new { @class = "form-control" } })*@
                        @*@Html.ValidationMessageFor(model => model.TerminationDate, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Is this Employee a Manager?
                    </div>  
                    <div class="col-md-4">
                        <div class="switch switch-square"
                             data-on-label="<i class=' fa fa-check'></i>"
                             data-off-label="<i class='fa fa-times'></i>">
                            @Html.EditorFor(model => model.IsManager)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Manager Employee ID
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ManagerEmployeeID, new { htmlAttributes = new { @class = "form-control onlyNum", type = "text", required = "true", maxlength = "7" } })
                        @*@Html.ValidationMessageFor(model => model.ManagerEmployeeID, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Position
                    </div>  
                    <div class="col-md-4">
                        @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control", required = "true" })
                        @*@Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Site
                    </div>  
                    <div class="col-md-4">
                        @Html.DropDownList("SiteID", null, htmlAttributes: new { @class = "form-control", required = "true" })
                        @*@Html.ValidationMessageFor(model => model.SiteID, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Is He/She Active?
                    </div>  
                    <div class="col-md-4">
                        <div class="switch switch-square"
                             data-on-label="<i class=' fa fa-check'></i>"
                             data-off-label="<i class='fa fa-times'></i>">
                            @Html.EditorFor(model => model.IsActive)
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Rehire Date
                    </div>  
                    <div class="col-md-4">
                        @if (Model.RehireDate.HasValue)
                        {
                            <input class="form-control" name="RehireDate" value="@Model.RehireDate.Value.ToString("M/d/yyyy")" />
                        }
                        else
                        {
                            @Html.EditorFor(model => model.RehireDate, new { htmlAttributes = new { @class = "form-control" } })
                        }
                        @*@Html.ValidationMessageFor(model => model.RehireDate, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        File Number
                    </div>  
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FileNumber, new { htmlAttributes = new { @class = "form-control onlyNum", required = "true", maxlength = "6" } })
                        @*@Html.ValidationMessageFor(model => model.FileNumber, "", new { @class = "text-danger" })*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-4">
                        <input type="submit" value="Save" class="btn btn-theme pull-right" />
                    </div>
                </div>
            </div>
        }

        <div style="padding-bottom: 5px">
            @if (User.IsInRole("Admin") || User.IsInRole("HR") || User.IsInRole("Quality"))
            {
                <a href="@Url.Action("Details","Employees", new { id = Model.EmployeeID })"> Employee Details</a> <span>|</span>
            }
            @Html.ActionLink("Back to Directory", "Directory", "Home")
        </div>
    </div>
</div>

@section Scripts {
@Scripts.Render("~/bundles/jqueryval")
<script>
        $(document).ready(function () {
            $('#direct').addClass("active");
        });
</script>
}
