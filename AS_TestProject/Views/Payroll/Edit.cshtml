@model AS_TestProject.Entities.AgentDailyHour

@{
    ViewBag.Title = "Edit";
}


<div class="col-lg-12 mt">
    <div class="row content-panel" style="padding-left: 20px; padding-right: 20px">
        <h2>Edit Time Entry</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AgentDailyHoursID)
                @Html.HiddenFor(model => model.EmployeeID)
                @Html.HiddenFor(model => model.DomainMasterID)
                @Html.HiddenFor(model => model.PayPeriodID)

                <input id="login" type="hidden" name="LoginTimeStamp" readonly="readonly" value="@ViewBag.Date" />
                @Html.ValidationMessageFor(model => model.LoginTimeStamp, "", new { @class = "text-danger" })
                <input id="logout" type="hidden" name="LogoutTimeStamp" readonly="readonly" value="@ViewBag.Date" />
                @Html.ValidationMessageFor(model => model.LogoutTimeStamp, "", new { @class = "text-danger" })

                @*<div class="form-group">
                        @Html.LabelFor(model => model.DomainMasterID, "DomainMasterID", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownList("DomainMasterID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DomainMasterID, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Login Time
                    </div>
                    <div class="col-md-4">
                        <div class="input-group bootstrap-timepicker">
                            <input id="time1" class="form-control timepicker-default" type="text" value="@Model.LoginTimeStamp.ToString("hh:mm:ss tt")" required />
                            <span class="input-group-btn">
                                <button class="btn btn-theme" type="button"><i class="fa fa-clock-o"></i></button>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Logout Time
                    </div>
                    <div class="col-md-4">
                        <div class="input-group bootstrap-timepicker">
                            <input id="time2" class="form-control timepicker-default" type="text" value="@Model.LogoutTimeStamp.ToString("hh:mm:ss tt")" required />
                            <span class="input-group-btn">
                                <button class="btn btn-theme" type="button"><i class="fa fa-clock-o"></i></button>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Duration
                    </div>
                    <div class="col-md-4">
                        <input id="totalTime" class="form-control" readonly="readonly" name="LoginDuration" value="@Model.LoginDuration" required />
                        @Html.ValidationMessageFor(model => model.LoginDuration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-2 control-label">
                        Adjustment Reason
                    </div>
                    <div class="col-md-4">
                        @Html.DropDownList("AgentTimeAdjustmentReasonID", null, "", htmlAttributes: new { @id = "reason", @class = "form-control", required = "true" })
                        @Html.ValidationMessageFor(model => model.AgentTimeAdjustmentReasonID, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="time-update" type="submit" value="Update" class="btn btn-theme" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index", new { id = Model.EmployeeID })
        </div>
        <br />
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            var $time1 = $("#time1");
            var $time2 = $("#time2");
            var $diff = $("#totalTime");

            function updateHours() {

                var dtStart = new Date("7/8/2016 " + $time1.val());
                var dtEnd = new Date("7/8/2016 " + $time2.val());

                var diff = dtEnd - dtStart;
                var totalSec = diff / 1000;
                var hours = parseInt(totalSec / 3600) % 24;
                var minutes = parseInt(totalSec / 60) % 60;
                var seconds = totalSec % 60;
                var result = (hours < 10 ? "0" + hours : hours) + ":" + (minutes < 10 ? "0" + minutes : minutes) + ":" + (seconds < 10 ? "0" + seconds : seconds);

                if (dtStart > dtEnd) {
                    $("#time-update").prop('disabled', true);
                    $diff.val("Login time can't be greater than logout time!");
                }

                if (dtStart <= dtEnd) {
                    $("#time-update").prop('disabled', false);
                    $diff.val(result);
                }
            }

            function updateTime() {
                var $login = $("#login");
                var $logout = $("#logout");

                var inStr = $login.val().toString();
                var inSub = inStr.substring(0, inStr.indexOf(' '));

                var outStr = $logout.val().toString();
                var outSub = outStr.substring(0, outStr.indexOf(' '));

                var time1Str = $time1.val().toString();
                var time2Str = $time2.val().toString();

                if (time1Str.match("^0")) {
                    var time1Sub = time1Str.substring(1, time1Str.length);
                }
                else {
                    var time1Sub = time1Str;
                }

                if (time2Str.match("^0")) {
                    var time2Sub = time2Str.substring(1, time2Str.length);
                }
                else {
                    var time2Sub = time2Str;
                }

                var login = inSub + " " + time1Sub;
                var logout = outSub + " " + time2Sub;

                $login.val(login);
                $logout.val(logout);
            }

            $time1.add($time2).change(function () {
                if ($time1.val() && $time2.val()) {
                    updateHours();
                    updateTime()
                }
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            var $login = $("#login");
            var $logout = $("#logout");
            var $time1 = $("#time1");
            var $time2 = $("#time2");

            var inStr = $login.val().toString();
            var inSub = inStr.substring(0, inStr.indexOf(' '));

            var outStr = $logout.val().toString();
            var outSub = outStr.substring(0, outStr.indexOf(' '));

            var time1Str = $time1.val().toString();
            var time2Str = $time2.val().toString();

            if (time1Str.match("^0")) {
                var time1Sub = time1Str.substring(1, time1Str.length);
            }
            else {
                var time1Sub = time1Str;
            }

            if (time2Str.match("^0")) {
                var time2Sub = time2Str.substring(1, time2Str.length);
            }
            else {
                var time2Sub = time2Str;
            }

            var login = inSub + " " + time1Sub;
            var logout = outSub + " " + time2Sub;

            $login.val(login);
            $logout.val(logout);
        })
    </script>
    <script>
            $(document).ready(function () {
                $('sidebar-menu li a').removeClass("active")
                $('#direct').addClass("active");
            });
    </script>
}
